{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/shared/user.service.ts","webpack:///src/app/shared/authservice.service.ts","webpack:///src/app/Component/navbar/navbar.component.ts","webpack:///src/app/Component/navbar/navbar.component.html","webpack:///src/app/Component/login-user/login-user.component.ts","webpack:///src/app/Component/login-user/login-user.component.html","webpack:///src/app/Component/user/user.component.ts","webpack:///src/app/Component/user/user.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/box/add-box/add-box.component.ts","webpack:///src/app/box/add-box/add-box.component.html","webpack:///src/app/Component/information/information.component.ts","webpack:///src/app/Component/information/information.component.html","webpack:///src/app/Component/register/register.component.ts","webpack:///src/app/Component/register/register.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/addrow.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","baseUrl","UserService","http","get","formData","post","id","providedIn","AuthserviceService","_http","body","observe","params","append","localStorage","getItem","NavbarComponent","_router","removeItem","navigate","movetoFriends","logout","selector","templateUrl","styleUrls","LoginUserComponent","authService","_activatedRoute","loginForm","login","required","password","age","family","race","food","controlName","invalid","touched","console","log","value","valid","subscribe","data","setItem","toString","error","relativeTo","movetoRegister","ELEMENT_DATA","UserComponent","friendService","dialog","displayedColumns","dataSource","paginator","getAllFriends","action","obj","dialogRef","open","width","disableClose","afterClosed","result","event","addRowData","row_obj","push","_id","filter","elm","delFriends","response","o","repeat","length","resp","getFriends","report","openDialog","AppComponent","title","AppModule","provide","useValue","declarations","imports","providers","bootstrap","AddBoxComponent","fb","dialogService","friends","_location","local_data","addForm","group","user","postFriends","res","warn","close","openSnackBar","message","navigateByUrl","skipLocationChange","then","decodeURI","path","doAction","closeDialog","InformationComponent","_authService","getLogin","RegisterComponent","successMessage","myForm","cfpassword","passValid","controls","valueChanges","x","updateValueAndValidity","control","undefined","passCtrl","root","passVal","isError","submitRegister","movetoLogin","register","routes","component","AppRoutingModule","forRoot","exports","AddrowService","snackbar","panelClass","openFromComponent","duration","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMA,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIA,UAAMC,OAAO,0CAAb;AAEP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AChBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaC,W;AAEX,6BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;uCAErB;AAClB,mBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAc,6BAAd,CAAP;AACD;;;sCAEoBC,Q,EAAe;AAClC,mBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAe,6BAAf,EAA8CD,QAA9C,CAAP;AACD;;;qCAEiBE,E,EAAS;AACzB,mBAAO,KAAKJ,IAAL,WAAiB,gCAAgC,GAAhC,GAAsCI,EAAvD,CAAP;AACD;;;;;;;yBAdUL,W,EAAW,uH;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVM,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;;;ACNxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaC,kB;AAEX,oCAAoBC,KAApB,EAAuC;AAAA;;AAAnB,eAAAA,KAAA,GAAAA,KAAA;AAAsB;;;;yCAE3BC,I,EAAW;AACxB,mBAAO,KAAKD,KAAL,CAAWJ,IAAX,CAAgB,gCAAhB,EAAkDK,IAAlD,EAAwD;AAC7DC,qBAAO,EAAE;AADoD,aAAxD,CAAP;AAGD;;;gCAEMD,I,EAAW;AAChB,mBAAO,KAAKD,KAAL,CAAWJ,IAAX,CAAgB,6BAAhB,EAA+CK,IAA/C,EAAqD;AAC1DC,qBAAO,EAAE;AADiD,aAArD,CAAP;AAGD;;;qCAEU;AACT,mBAAO,KAAKF,KAAL,CAAWN,GAAX,CAAe,4BAAf,EAA6C;AAClDQ,qBAAO,EAAE,MADyC;AAElDC,oBAAM,EAAE,IAAI,+DAAJ,GAAiBC,MAAjB,CAAwB,OAAxB,EAAiCC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAjC;AAF0C,aAA7C,CAAP;AAID;;;;;;;yBArBUP,kB,EAAkB,uH;AAAA,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBAFjB;;;;;wEAEDA,kB,EAAkB;gBAH9B,wDAG8B;iBAHnB;AACVD,sBAAU,EAAE;AADF,W;AAGmB,U;;;;;;;;;;;;;;;;;;;;;;ACN/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;UAQaS,e;AAEX,iCAAoBC,OAApB,EAAqC;AAAA;;AAAjB,eAAAA,OAAA,GAAAA,OAAA;AAAoB;;;;qCAEhC,CACP;;;mCAEQ;AACPH,wBAAY,CAACI,UAAb,CAAwB,OAAxB;;AACA,iBAAKD,OAAL,CAAaE,QAAb,CAAsB,CAAC,cAAD,CAAtB;AACD;;;0CACY;AACX,iBAAKF,OAAL,CAAaE,QAAb,CAAsB,CAAC,YAAD,CAAtB;AACD;;;;;;;yBAbUH,e,EAAe,uH;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,e;AAAA,+K;AAAA;AAAA;ACR5B;;AACI;;AACI;;AACA;;AAAwB;;AAAS;;AACrC;;AAEA;;AACI;;AAAQ;AAAA,qBAAS,IAAAI,aAAA,EAAT;AAAwB,aAAxB;;AACJ;;AACJ;;AACA;;AAAQ;AAAA,qBAAS,IAAAC,MAAA,EAAT;AAAiB,aAAjB;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAXY;;AAAA;;;;;;;;;wEDKCL,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTM,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYwB;;AAAmD;;AAAmB;;;;;;AAMtE;;AAAsD;;AAAmB;;;;UDRpFC,kB;AAIX,oCAAoBC,WAApB,EAA6DT,OAA7D,EAAsFU,eAAtF,EAAqH;AAAA;;AAAjG,eAAAD,WAAA,GAAAA,WAAA;AAAyC,eAAAT,OAAA,GAAAA,OAAA;AAAyB,eAAAU,eAAA,GAAAA,eAAA;AACpF,eAAKC,SAAL,GAAiB,IAAI,wDAAJ,CAAc;AAC7BC,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,0DAAWC,QAAjC,CADsB;AAE7BC,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,0DAAWD,QAAjC,CAFmB;AAG7BE,eAAG,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,CAHwB;AAI7BC,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,CAJqB;AAK7BC,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,CALuB;AAM7BC,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,IAAhB;AANuB,WAAd,CAAjB;AAQA;;;;qCAEM,CACP;;;kCAESC,W,EAAkB;;;AAC1B,mBAAO,YAAKR,SAAL,CAAezB,GAAf,CAAmBiC,WAAnB,OAA+B,IAA/B,IAA+B,aAA/B,GAA+B,MAA/B,GAA+B,GAAEC,OAAjC,MAAwC,MAAI,KAAKT,SAAL,CAAezB,GAAf,CAAmBiC,WAAnB,CAAJ,MAAmC,IAAnC,IAAmC,aAAnC,GAAmC,MAAnC,GAAmC,GAAEE,OAA7E,CAAP;AACD;;;kCAEO;AACNC,mBAAO,CAACC,GAAR,CAAY,KAAKZ,SAAL,CAAea,KAA3B;;AACA,gBAAI,KAAKb,SAAL,CAAec,KAAnB,EAA0B;AACxB,mBAAKhB,WAAL,CAAiBG,KAAjB,CAAuB,KAAKD,SAAL,CAAea,KAAtC,EACCE,SADD,CAEE,UAAAC,IAAI,EAAI;AACNL,uBAAO,CAACC,GAAR,CAAYI,IAAZ;AACA9B,4BAAY,CAAC+B,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACE,QAAL,EAA9B;AACD,eALH,EAME,UAAAC,KAAK,EAAI,CAAE,CANb;;AAQA,mBAAK9B,OAAL,CAAaE,QAAb,CAAsB,CAAC,SAAD,CAAtB;AACD;AAEF;;;2CACkB;AACjB,iBAAKF,OAAL,CAAaE,QAAb,CAAsB,CAAC,aAAD,CAAtB,EAAuC;AAAC6B,wBAAU,EAAE,KAAKrB;AAAlB,aAAvC;AACD;;;;;;;yBAvCUF,kB,EAAkB,sJ,EAAA,uH,EAAA,+H;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,iB;AAAA,e;AAAA,4kC;AAAA;AAAA;ACV/B;;AACI;;AACA;;AACI;;AACI;;AACI;;AAAI;;AAAK;;AACb;;AACA;;AACI;;AACI;;AACI;;AAAgC;;AAAa;;AAC7C;;AACA;;AAEJ;;AACA;;AACI;;AAAmC;;AAAQ;;AAC3C;;AACA;;AACJ;;AAEA;;AACI;;AAAmC;;AAAG;;AACtC;;AACJ;;AACA;;AACI;;AAAmC;;AAAM;;AACzC;;AACJ;;AACA;;AACI;;AAAmC;;AAAI;;AACvC;;AACJ;;AACA;;AACI;;AAAmC;;AAAI;;AACvC;;AACJ;;AACA;;AACI;;AAAQ;AAAA,qBAAQ,IAAAI,KAAA,EAAR;AAAe,aAAf;;AAAsD;;AAAK;;AACvE;;AACJ;;AACJ;;AACA;;AACI;;AAAsB;AAAA,qBAAS,IAAAoB,cAAA,EAAT;AAAyB,aAAzB;;AAA4D;;AAAQ;;AAC9F;;AACJ;;AACJ;;AACA;;AACJ;;;;AAxCsB;;AAAA;;AAI6B;;AAAA;;AAMA;;AAAA;;;;;;;;;wEDRtCxB,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTH,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaoB;;AAAuD;;AAAE;;;;;;AACzD;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;;;AAIJ;;AAAsC;;AAAK;;;;;;AAC3C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAGxC;;AAAuC;;AAAS;;;;;;AAChD;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAGxC;;;;;;;;AACA;;AACI;;AAA2C;;AAAU;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAAc;;AAAW;;AAC7G;;;;;;AAGJ;;;;;;AACA;;;;;;;;AD1BhB,UAAM0B,YAAY,GAAc,EAAhC;;UAQaC,a;AAOX,+BAAoBC,aAApB,EAAuDC,MAAvD,EAA0E;AAAA;;AAAtD,eAAAD,aAAA,GAAAA,aAAA;AAAmC,eAAAC,MAAA,GAAAA,MAAA;AANvD,eAAAC,gBAAA,GAA6B,CAAC,IAAD,EAAO,OAAP,EAAgB,UAAhB,EAA4B,QAA5B,CAA7B;AACA,eAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuBL,YAAvB,CAAb;AAK4E;;;;4CAI1D;AAChB,iBAAKK,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;qCAES;AACR,iBAAKC,aAAL;AACD;;;qCACYC,M,EAAaC,G,EAAU;AAAA;;AAClCA,eAAG,CAACD,MAAJ,GAAaA,MAAb;AACA,gBAAIE,SAAS,GAAG,KAAKP,MAAL,CAAYQ,IAAZ,CAAiB,qFAAjB,EAAkC;AAChDC,mBAAK,EAAE,OADyC;AAEhDC,0BAAY,EAAE,IAFkC;AAGhDnB,kBAAI,EAACe;AAH2C,aAAlC,CAAhB;AAKAC,qBAAS,CAACI,WAAV,GAAwBrB,SAAxB,CAAkC,UAAAsB,MAAM,EAAI;AAC1C,kBAAGA,MAAM,CAACC,KAAP,IAAgB,KAAnB,EAAyB;AACvB,qBAAI,CAACC,UAAL,CAAgBF,MAAM,CAACrB,IAAvB;AACD;AACF,aAJD;AAKD;;;mCACSc,M,EAAaC,G,EAAuB;AAC5CA,eAAG,CAACD,MAAJ,GAAaA,MAAb;AACA,gBAAIE,SAAS,GAAG,KAAKP,MAAL,CAAYQ,IAAZ,CAAiB,qFAAjB,EAAkC;AAChDC,mBAAK,EAAE,OADyC;AAEhDC,0BAAY,EAAE,IAFkC;AAGhDnB,kBAAI,EAAEe;AAH0C,aAAlC,CAAhB;AAKAC,qBAAS,CAACI,WAAV,GAAwBrB,SAAxB,CAAkC,UAAAsB,MAAM,EAAI;AAC1C1B,qBAAO,CAACC,GAAR,CAAYyB,MAAM,CAACrB,IAAnB;;AACA,kBAAIqB,MAAM,CAACC,KAAP,IAAgB,QAApB,EAA8B;AAC5B3B,uBAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AACF,aALD;AAMD;;;qCAEY4B,O,EAAiD;AAC5D,iBAAKb,UAAL,CAAgBX,IAAhB,CAAqByB,IAArB,CAA0B;AACxBC,iBAAG,EAACF,OAAO,CAACE,GADY;AAExBzC,mBAAK,EAACuC,OAAO,CAACvC,KAFU;AAGxBE,sBAAQ,EAACqC,OAAO,CAACrC;AAHO,aAA1B;AAKA,mBAAO,KAAKwB,UAAL,CAAgBgB,MAAhB,GAAyB,EAAhC;AAED;;;kCAESC,G,EAAU;AAAA;;AAClB,iBAAKpB,aAAL,CAAmBqB,UAAnB,CAA8BD,GAA9B,EAAmC7B,SAAnC,CAA6C,UAAC+B,QAAD,EAAmB;AAC9D,oBAAI,CAACnB,UAAL,CAAgBX,IAAhB,GAAuB,MAAI,CAACW,UAAL,CAAgBX,IAAhB,CAAqB2B,MAArB,CAA4B,UAACI,CAAD,EAAgB;AACjE,uBAAOA,CAAC,CAACL,GAAF,KAAUE,GAAV,GAAgBG,CAAhB,GAAoB,KAA3B;AACD,eAFsB,CAAvB;AAIApC,qBAAO,CAACC,GAAR,CAAY,MAAI,CAACe,UAAL,CAAgBX,IAA5B;AACD,aAND;AAOD;;;uCACYb,Q,EAAgB;AAC3B,mBAAO,IAAI6C,MAAJ,CAAW7C,QAAQ,CAAC8C,MAApB,CAAP;AACD;;;0CAEsB;AAAA;;AACrB,gBAAIC,IAAI,GAAG,KAAK1B,aAAL,CAAmB2B,UAAnB,EAAX;AACAD,gBAAI,CAACnC,SAAL,CAAe,UAAAqC,MAAM;AAAA,qBAAI,MAAI,CAACzB,UAAL,CAAgBX,IAAhB,GAAsBoC,MAA1B;AAAA,aAArB;AACD;;;;;;;yBAxEU7B,a,EAAa,wI,EAAA,mI;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA;AAAA;sEAQb,wE,EAAY,I;;;;;;;;;;;;;;ACxBzB;;AACA;;AACI;;AACI;;AAAI;;AAAY;;AACpB;;AACA;;AACI;;AACI;;AAAwB;AAAA,qBAAS,IAAA8B,UAAA,CAAW,KAAX,EAAkB,EAAlB,CAAT;AAA8B,aAA9B;;AAA2E;;AAAU;;AAAG;;AAAW;;AAAG;;AAClI;;AAEA;;AACI;;AACI;;AACI;;AACA;;AAGJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AAGJ;;AAEA;;AACA;;AACJ;;AACA;;AACJ;;AACJ;;AACJ;;;;AA5B6B;;AAAA;;AAsBO;;AAAA;;AACa;;AAAA;;AAEtB;;AAAA;;;;;;;;;wEDpBd9B,a,EAAa;gBANzB,uDAMyB;iBANf;AACT7B,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAMe,U;;;;;;;AASxBgC,mBAAS;kBADR,uDACQ;mBADE,wE;AACF;;;;;;;;;;;;;;;;;;;AEzBX;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOa0B,Y,GALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,YAAR;AACD,O;;;yBAFYD,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPzB;;AACI;;AACJ;;;;;;;;;wEDKaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACT5D,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;AEPziEa4D,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBANT,CACT;AAACC,iBAAO,EAAE,sEAAV;AACEC,kBAAQ,EAAE;AADZ,SADS,EAGT,iEAHS,EAGI,8DAHJ,EAGmB,+EAHnB,C;AAGsC,kBAnBxC,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,qEAJO,EAKP,0DALO,EAMP,kEANO,EAOP,uEAPO,EAQP,+EARO,EASP,qEATO,EAUP,gFAVO,EAWP,yEAXO,EAYP,8EAZO,EAaP,uEAbO,EAcP,qEAdO,CAmBwC;;;;4HAGtCF,S,EAAS;AAAA,yBA/BlB,2DA+BkB,EA9BlB,kFA8BkB,EA7BlB,4EA6BkB,EA5BlB,wFA4BkB,EA3BlB,8FA2BkB,EA1BlB,+EA0BkB,EAzBlB,kGAyBkB;AAzBE,oBAIpB,uEAJoB,EAKpB,oEALoB,EAMpB,4FANoB,EAOpB,qEAPoB,EAQpB,0DARoB,EASpB,kEAToB,EAUpB,uEAVoB,EAWpB,+EAXoB,EAYpB,qEAZoB,EAapB,gFAboB,EAcpB,yEAdoB,EAepB,8EAfoB,EAgBpB,uEAhBoB,EAiBpB,qEAjBoB;AAyBF,S;AARL,O;;;;;wEAQJA,S,EAAS;gBAjCrB,sDAiCqB;iBAjCZ;AACRG,wBAAY,EAAE,CACZ,2DADY,EAEZ,kFAFY,EAGZ,4EAHY,EAIZ,wFAJY,EAKZ,8FALY,EAMZ,+EANY,EAOZ,kGAPY,CADN;AAWRC,mBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,qEAJO,EAKP,0DALO,EAMP,kEANO,EAOP,uEAPO,EAQP,+EARO,EASP,qEATO,EAUP,gFAVO,EAWP,yEAXO,EAYP,8EAZO,EAaP,uEAbO,EAcP,qEAdO,CAXD;AA2BRC,qBAAS,EAAE,CACT;AAACJ,qBAAO,EAAE,sEAAV;AACEC,sBAAQ,EAAE;AADZ,aADS,EAGT,iEAHS,EAGI,8DAHJ,EAGmB,+EAHnB,CA3BH;AA+BRI,qBAAS,EAAE,CAAC,2DAAD;AA/BH,W;AAiCY,U;;;;;;;;;;;;;;;;;;ACjEtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAcaC,e;AAOX,iCAAoBC,EAApB,EAA2ChC,SAA3C,EAC8ChB,IAD9C,EAEUiD,aAFV,EAEgDC,OAFhD,EAGS7E,OAHT,EAGiC8E,SAHjC,EAGsD;AAAA;;AAHlC,eAAAH,EAAA,GAAAA,EAAA;AAAuB,eAAAhC,SAAA,GAAAA,SAAA;AACG,eAAAhB,IAAA,GAAAA,IAAA;AACpC,eAAAiD,aAAA,GAAAA,aAAA;AAAsC,eAAAC,OAAA,GAAAA,OAAA;AACvC,eAAA7E,OAAA,GAAAA,OAAA;AAAwB,eAAA8E,SAAA,GAAAA,SAAA;AAC7BxD,iBAAO,CAACC,GAAR,CAAYI,IAAZ;AACF,eAAKoD,UAAL,GAAkB,MAAH,OAAG,CAAH,EAAG,EAAIpD,IAAJ,CAAlB;AACA,eAAKc,MAAL,GAAc,KAAKsC,UAAL,CAAgBtC,MAA9B;AACA,eAAKuC,OAAL,GAAeL,EAAE,CAACM,KAAH,CAAS;AACtBrE,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADe;AAEtBC,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB;AAFY,WAAT,CAAf;AAIC;;;;qCACO;AAAA;;AACR,iBAAKqE,IAAL,GAAY,KAAKF,OAAL,CAAaxD,KAAzB;AACA,iBAAKqD,OAAL,CAAaM,WAAb,CAAyB,KAAKD,IAA9B,EACCxD,SADD,CAEE,UAAC0D,GAAD,EAAS;AACP9D,qBAAO,CAAC+D,IAAR,CAAa,QAAb,EAAuBD,GAAvB;AACD,aAJH;AAMA,iBAAKzC,SAAL,CAAe2C,KAAf,CAAqB;AAAErC,mBAAK,EAAE,KAAKR,MAAd;AAAsBd,kBAAI,EAAE,KAAKoD;AAAjC,aAArB;AACA,iBAAKH,aAAL,CAAmBW,YAAnB,CAAgC,KAAKC,OAArC,EAA8C,MAA9C;;AACA,iBAAKxF,OAAL,CAAayF,aAAb,CAA2B,OAA3B,EAAoC;AAAEC,gCAAkB,EAAE;AAAtB,aAApC,EAAkEC,IAAlE,CAAuE,YAAM;AAC3ErE,qBAAO,CAACC,GAAR,CAAYqE,SAAS,CAAC,MAAI,CAACd,SAAL,CAAee,IAAf,EAAD,CAArB;;AACA,oBAAI,CAAC7F,OAAL,CAAaE,QAAb,CAAsB,CAAC0F,SAAS,CAAC,MAAI,CAACd,SAAL,CAAee,IAAf,EAAD,CAAV,CAAtB;AACD,aAHD;AAID;;;wCACU;AACT,iBAAKlD,SAAL,CAAe2C,KAAf,CAAqB;AAACrC,mBAAK,EAAC;AAAP,aAArB;AACD;;;;;;;yBApCUyB,e,EAAe,2H,EAAA,sI,EAAA,gEAQJ,wEARI,EAQW,CARX,C,EAQW,qI,EAAA,wI,EAAA,uH,EAAA,yH;AAAA,O;;;cAR1BA,e;AAAe,oC;AAAA,iB;AAAA,e;AAAA,wkB;AAAA;AAAA;ACd5B;;AAAoE;;AAAQ;;AAAU;;AAAU;;AAAG;;AACnG;;AACI;;AACI;;AACI;;AAA+C;AAAA;AAAA;;AAA/C;;AACJ;;AACA;;AACI;;AAAkD;AAAA;AAAA;;AAAlD;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAiE;AAAA,qBAAS,IAAAoB,QAAA,EAAT;AAAmB,aAAnB;;AAAqB;;AAAU;;AAChG;;AAAmB;AAAA,qBAAS,IAAAC,WAAA,EAAT;AAAsB,aAAtB;;AAAqD;;AAAM;;AAClF;;;;AAd4E;;AAAA;;AAElE;;AAAA;;AAES;;AAAA;;AAAwC;;AAGxC;;AAAA;;AAA2C;;AAK4B;;AAAA;;;;;;;;;wEDE7ErB,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTrE,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKiB,U;;;;;;;;oBAQvB;;oBAAY,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASayF,oB;AAOX,sCAAoBC,YAApB,EAA8DjG,OAA9D,EAA+E;AAAA;;AAAA;;AAA3D,eAAAiG,YAAA,GAAAA,YAAA;AAA0C,eAAAjG,OAAA,GAAAA,OAAA;AAL9D,eAAAY,KAAA,GAAQ,EAAR;AACA,eAAAG,GAAA,GAAM,EAAN;AACA,eAAAC,MAAA,GAAS,EAAT;AACA,eAAAC,IAAA,GAAO,EAAP;AACA,eAAAC,IAAA,GAAO,EAAP;;AAEE,eAAK+E,YAAL,CAAkBC,QAAlB,GACCxE,SADD,CAEE,UAAAC,IAAI;AAAA,mBACA,MAAI,CAACZ,GAAL,GAAWY,IAAI,CAACE,QAAL,EADX;AAAA,WAFN,EAIE,UAAAC,KAAK;AAAA,mBAAI,MAAI,CAAC9B,OAAL,CAAaE,QAAb,CAAsB,CAAC,cAAD,CAAtB,CAAJ;AAAA,WAJP;AAMA;;;;qCAEM,CACP;;;;;;;yBAjBU8F,oB,EAAoB,sJ,EAAA,uH;AAAA,O;;;cAApBA,oB;AAAoB,wC;AAAA,iB;AAAA,e;AAAA,0S;AAAA;AAAA;ACTjC;;AACA;;AACI;;AACI;;AACI;;AACI;;AAA4C;;AAAM;;AACtD;;AACA;;AACI;;AACI;;AAAI;;AAAK;;AACT;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AAAG;;AACP;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AAAM;;AACV;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AAAI;;AACR;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AAAI;;AACR;;AACI;;AACJ;;AACJ;;AAEJ;;AACJ;;AACJ;;AACJ;;;;AA/BwB;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;;;;;;;;wED1BXA,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACT3F,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;;;;;AETjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACcgC;;AAAmD;;AAAmB;;;;;;AAKtE;;AAAsD;;AAAsB;;;;;;AAK5E;;AAAwD;;AAAwB;;;;;;AAOhF;;AAAiD;;AAAW;;;;;;AAK5D;;AAAoD;;AAAc;;;;;;AAKlE;;AAAmD;;AAAY;;;;;;AAK/D;;AAAkD;;AAAY;;;;UDpCjF4F,iB;AAIX,mCAAoB1F,WAApB,EAA6DT,OAA7D,EAAsFU,eAAtF,EAAuH;AAAA;;AAAA;;AAAnG,eAAAD,WAAA,GAAAA,WAAA;AAAyC,eAAAT,OAAA,GAAAA,OAAA;AAAyB,eAAAU,eAAA,GAAAA,eAAA;AAFtF,eAAA0F,cAAA,GAAkB,EAAlB;AAGE,eAAKC,MAAL,GAAc,IAAI,wDAAJ,CAAc;AAC1BzF,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,0DAAWC,QAAjC,CADmB;AAE1BC,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,0DAAWD,QAAjC,CAFgB;AAG1BE,eAAG,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,0DAAWF,QAAjC,CAHqB;AAI1BG,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,0DAAWH,QAAjC,CAJkB;AAK1BI,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,0DAAWJ,QAAjC,CALoB;AAM1BK,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,0DAAWL,QAAjC,CANoB;AAO1ByF,sBAAU,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,KAAKC,SAA3B;AAPc,WAAd,CAAd;AASA,eAAKF,MAAL,CAAYG,QAAZ,CAAqB1F,QAArB,CAA8B2F,YAA9B,CACC/E,SADD,CAEE,UAAAgF,CAAC;AAAA,mBAAI,MAAI,CAACL,MAAL,CAAYG,QAAZ,CAAqBF,UAArB,CAAgCK,sBAAhC,EAAJ;AAAA,WAFH;AAIA;;;;qCAEW,CACZ;;;kCACOxF,W,EAAkB;;;AACxB,mBAAO,YAAKkF,MAAL,CAAYnH,GAAZ,CAAgBiC,WAAhB,OAA4B,IAA5B,IAA4B,aAA5B,GAA4B,MAA5B,GAA4B,GAAEC,OAA9B,MAAqC,MAAI,KAAKiF,MAAL,CAAYnH,GAAZ,CAAgBiC,WAAhB,CAAJ,MAAgC,IAAhC,IAAgC,aAAhC,GAAgC,MAAhC,GAAgC,GAAEE,OAAvE,CAAP;AACD;;;oCAESuF,O,EAA0B;AAClC,gBAAIA,OAAO,KAAKA,OAAO,CAACpF,KAAR,KAAkB,IAAlB,IAA0BoF,OAAO,CAACpF,KAAR,KAAkBqF,SAAjD,CAAX,EAAwE;AACtE,kBAAMP,UAAU,GAAGM,OAAO,CAACpF,KAA3B;AAEA,kBAAMsF,QAAQ,GAAGF,OAAO,CAACG,IAAR,CAAa7H,GAAb,CAAiB,UAAjB,CAAjB;;AACA,kBAAI4H,QAAJ,EAAc;AACZ,oBAAME,OAAO,GAAIF,QAAQ,CAACtF,KAA1B;;AACA,oBAAIwF,OAAO,KAAKV,UAAZ,IAA0BU,OAAO,KAAK,EAA1C,EAA8C;AAC5C,yBAAO;AACLC,2BAAO,EAAE;AADJ,mBAAP;AAGD;AACF;AACF;;AACD,mBAAO,IAAP;AACD;;;wCACe;AACd,iBAAKjH,OAAL,CAAaE,QAAb,CAAsB,CAAC,cAAD,CAAtB,EAAwC;AAAC6B,wBAAU,EAAE,KAAKrB;AAAlB,aAAxC;AACD;;;qCAEU;AAAA;;AACTY,mBAAO,CAACC,GAAR,CAAY,KAAK8E,MAAL,CAAY7E,KAAxB;;AACA,gBAAI,KAAK6E,MAAL,CAAY5E,KAAhB,EAAuB;AACrB,mBAAKhB,WAAL,CAAiByG,cAAjB,CAAgC,KAAKb,MAAL,CAAY7E,KAA5C,EACCE,SADD,CAEE,UAAAC,IAAI;AAAA,uBAAI,MAAI,CAACyE,cAAL,GAAsB,kBAA1B;AAAA,eAFN,EAGE,UAAAtE,KAAK;AAAA,uBAAI,MAAI,CAACsE,cAAL,GAAsB,YAA1B;AAAA,eAHP;AAKA,mBAAKe,WAAL;AACD;AAEF;;;;;;;yBAzDUhB,iB,EAAiB,sJ,EAAA,uH,EAAA,+H;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,e;AAAA,g9C;AAAA;AAAA;ACV9B;;AACI;;AACA;;AACI;;AACI;;AACI;;AAAI;;AAAQ;;AAChB;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAgC;;AAAK;;AACrC;;AACA;;AACJ;;AACA;;AACI;;AAAgC;;AAAQ;;AACxC;;AACA;;AACJ;;AACA;;AACI;;AAAmC;;AAAgB;;AACnD;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAgC;;AAAG;;AACnC;;AACA;;AACJ;;AACA;;AACI;;AAAgC;;AAAM;;AACtC;;AACA;;AACJ;;AACA;;AACI;;AAAmC;;AAAI;;AACvC;;AACA;;AACJ;;AACA;;AACI;;AAAmC;;AAAI;;AACvC;;AACA;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACJ;;AACA;;AACI;;AAAsB;AAAA,qBAAS,IAAAiB,QAAA,EAAT;AAAmB,aAAnB;;AAAsD;;AAAQ;;AACxF;;AACJ;;AAEA;;AACI;;AAAK;;AAAyB;;AAC9B;;AACI;;AAAQ;AAAA,qBAAS,IAAAD,WAAA,EAAT;AAAsB,aAAtB;;AAAsD;;AAAK;;AACvE;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACJ;;;;AA7DsB;;AAAA;;AAMqC;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAOA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAMnC;;AAAA;;;;;;;;;wED1CXhB,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACT9F,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAM8G,MAAM,GAAW,CACnB;AAACxB,YAAI,EAAE,EAAP;AAAWyB,iBAAS,EAAE;AAAtB,OADmB,EAEnB;AAACzB,YAAI,EAAE,MAAP;AAAeyB,iBAAS,EAAE;AAA1B,OAFmB,EAGnB;AAACzB,YAAI,EAAE,SAAP;AAAkByB,iBAAS,EAAE;AAA7B,OAHmB,EAInB;AAACzB,YAAI,EAAE,UAAP;AAAmByB,iBAAS,EAAE;AAA9B,OAJmB,EAKnB;AAACzB,YAAI,EAAE,WAAP;AAAoByB,iBAAS,EAAE;AAA/B,OALmB,CAAvB;;UAgBaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAPlB,CACT,6DAAaC,OAAb,CAAqBH,MAArB,CADS,CAOkB,EAHzB,4DAGyB;;;;4HAAhBE,gB,EAAgB;AAAA;AAAA,oBAHzB,4DAGyB;AAAA,S;AAHb,O;;;;;wEAGHA,gB,EAAgB;gBAR5B,sDAQ4B;iBARnB;AACRhD,mBAAO,EAAE,CACT,6DAAaiD,OAAb,CAAqBH,MAArB,CADS,CADD;AAIRI,mBAAO,EAAE,CACP,4DADO;AAJD,W;AAQmB,U;;;;;;;;;;;;;;;;;;ACtB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaC,a;AAEX,+BAAoBtF,MAApB,EAA8CuF,QAA9C,EAAqE;AAAA;;AAAjD,eAAAvF,MAAA,GAAAA,MAAA;AAA0B,eAAAuF,QAAA,GAAAA,QAAA;AAA0B;;;;uCAE3DnC,O,EAAiBoC,U,EAAoB;AAChD,iBAAKD,QAAL,CAAcE,iBAAd,CAAgC,8EAAhC,EAAiD;AAC/ClG,kBAAI,EAAE6D,OADyC;AAE/CoC,wBAAU,EAAE,KAFmC;AAG/CE,sBAAQ,EAAE;AAHqC,aAAjD;AAKD;;;;;;;yBAVUJ,a,EAAa,0H,EAAA,+H;AAAA,O;;;eAAbA,a;AAAa,iBAAbA,aAAa,K;AAAA,oBAFZ;;;;;wEAEDA,a,EAAa;gBAHzB,wDAGyB;iBAHd;AACVpI,sBAAU,EAAE;AADF,W;AAGc,U;;;;;;;;;;;;;;;;;;;;;;;;ACR1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYR,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBiJ,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAI1G,OAAO,CAACQ,KAAR,CAAckG,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBzC,IAAlB,CAAuB,YAAW;AACxC,cAAI0C,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBJ,GAAzB,GAA+B,GAAzC,CAAR;AACAG,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDJ,8BAAwB,CAACO,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAP,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAQ,YAAM,CAAChB,OAAP,GAAiBQ,wBAAjB;AACAA,8BAAwB,CAAC5I,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\nexport const baseUrl= `mongodb://localhost:27017/Schtroumpf/`;\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  public getFriends() {\n    return this.http.get(\"http://localhost:8080/users\");\n  }\n\n    public postFriends(formData: any) {\n    return this.http.post(\"http://localhost:8080/users\", formData);\n  }\n\n  public delFriends(id: any) {\n    return this.http.delete(\"http://localhost:8080/users\" + '/' + id);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthserviceService {\n\n  constructor(private _http: HttpClient) { }\n\n  submitRegister(body: any) {\n    return this._http.post(\"http://localhost:8080/register\", body, {\n      observe: 'body'\n    });\n  }\n\n   login(body: any) {\n    return this._http.post(\"http://localhost:8080/login\", body, {\n      observe: 'body'\n    });\n  }\n\n  getLogin() {\n    return this._http.get(\"http://localhost:8080/user\", {\n      observe: 'body',\n      params: new HttpParams().append('token', localStorage.getItem('token')!)\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private _router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this._router.navigate(['../loginUser']);\n  }\n  movetoFriends(){\n    this._router.navigate(['../friends'])\n  } \n}\n","<div class=\"navbar\">\n    <div class=\"title-app\">\n        <img src=\"../../../assets/icon-schtroumpf.svg\" alt=\"\">\n        <h1 [routerLink]=\"['']\">SCHTROUMF</h1>\n    </div>\n\n    <div class=\"logout\">\n        <button (click)=\"movetoFriends()\" class=\"register-btn\">\n            Friends\n        </button>\n        <button (click)=\"logout()\" class=\"register-btn\">\n            Logout\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthserviceService } from 'src/app/shared/authservice.service';\n\n@Component({\n  selector: 'app-login-user',\n  templateUrl: './login-user.component.html',\n  styleUrls: ['./login-user.component.scss']\n})\nexport class LoginUserComponent implements OnInit {\n\n  loginForm: FormGroup\n\n  constructor(private authService: AuthserviceService, private _router: Router, private _activatedRoute: ActivatedRoute ) {\n    this.loginForm = new FormGroup({\n      login: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n      age: new FormControl(null),\n      family: new FormControl(null),\n      race: new FormControl(null),\n      food: new FormControl(null),\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n    isValid(controlName: any) {\n    return this.loginForm.get(controlName)?.invalid && this.loginForm.get(controlName)?.touched;\n  }\n\n  login() {\n    console.log(this.loginForm.value);\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.value)\n      .subscribe(\n        data => {\n          console.log(data);\n          localStorage.setItem('token', data.toString());\n        },\n        error => {}\n      )\n      this._router.navigate(['../info']);\n    }\n\n  }\n    movetoRegister() {\n    this._router.navigate(['../register'], {relativeTo: this._activatedRoute});\n  }\n\n}\n","<div class=\"container\">\n    <img class=\"img-schtroumf-1\" src=\"../../../assets/icon-schtroumpf.svg\" alt=\"\" srcset=\"\">\n    <div class=\"card w-75\">\n        <div class=\"card-body\">\n            <div class=\"card-title\">\n                <h2>LOGIN</h2>\n            </div>\n            <div class=\"form\">\n                <form [formGroup]=\"loginForm\">\n                    <div class=\"form-group\">\n                        <label for=\"exampleInputEmail1\">Email address</label>\n                        <input type=\"email\" formControlName=\"login\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n                        <span style=\"color: red;\" *ngIf=\"isValid('login')\">Login is required !</span>\n\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exampleInputPassword1\">Password</label>\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n                        <span style=\"color: red;\" *ngIf=\"isValid('password')\">Login is required !</span>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"exampleInputPassword1\">age</label>\n                        <input formControlName=\"age\" class=\"form-control\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exampleInputPassword1\">family</label>\n                        <input formControlName=\"family\" class=\"form-control\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exampleInputPassword1\">race</label>\n                        <input formControlName=\"race\" class=\"form-control\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exampleInputPassword1\">food</label>\n                        <input formControlName=\"food\" class=\"form-control\">\n                    </div>\n                    <div class=\"btn-login\">\n                        <button (click)=login() type=\"submit\" class=\"btn btn-primary\">LOGIN</button>\n                    </div>\n                </form>\n            </div>\n            <div class=\"btn-register\">\n                <button type=\"submit\" (click)=\"movetoRegister()\" class=\"btn btn-success register\">REGISTER</button>\n            </div>\n        </div>\n    </div>\n    <img class=\"img-schtroumf-2\" src=\"../../../assets/icon-schtroumpf.svg\" alt=\"\" srcset=\"\">\n</div>","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { AddBoxComponent } from 'src/app/box/add-box/add-box.component';\nimport { Friends } from 'src/app/shared/friends';\nimport { UserService } from 'src/app/shared/user.service';\n\nconst ELEMENT_DATA: Friends[] = [];\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\n\nexport class UserComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'login', 'password', 'action' ];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n  table: any;\n  action: any;\n\n\n  constructor(private friendService: UserService, public dialog: MatDialog) {}\n  @ViewChild(MatPaginator)\n  paginator!: MatPaginator;\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n    ngOnInit(){\n    this.getAllFriends();\n  }\n    openDialog(action: any, obj: any) {\n    obj.action = action;\n    let dialogRef = this.dialog.open(AddBoxComponent, {\n      width: '800px',\n      disableClose: true,\n      data:obj\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result.event == 'Add'){\n        this.addRowData(result.data);\n      }\n    });\n  }\n   openSave(action: any, obj: { action: any; }) {\n    obj.action = action;\n    let dialogRef = this.dialog.open(AddBoxComponent, {\n      width: '800px',\n      disableClose: true,\n      data: obj\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result.data);\n      if (result.event == 'Update') {\n        console.log('update')\n      }\n    });\n  }\n\n    addRowData(row_obj: { _id: any; login: any; password: any; }){\n    this.dataSource.data.push({\n      _id:row_obj._id,\n      login:row_obj.login,\n      password:row_obj.password\n    });\n    return this.dataSource.filter = \"\";\n    \n  }\n\n    deleted(elm: any) {\n    this.friendService.delFriends(elm).subscribe((response: any) => {\n      this.dataSource.data = this.dataSource.data.filter((o: Friends) => {\n        return o._id !== elm ? o : false;\n      });\n      \n      console.log(this.dataSource.data);\n    });\n  }\n  hashPassword(password: string){\n    return \"*\".repeat(password.length)\n  }\n\n  public getAllFriends() {\n    let resp = this.friendService.getFriends();\n    resp.subscribe(report => this.dataSource.data= report as Friends[])\n  }\n}\n\n\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <div class=\"title\">\n        <h5>FRIENDS LIST</h5>\n    </div>\n    <div class=\"list-of-friends\">\n        <div class=\"btn\">\n            <button class=\"btn-add\" (click)=\"openDialog('Add', {})\" mat-button mat-flat-button color=\"primary\"><mat-icon>add</mat-icon>ADD</button>\n        </div>\n\n        <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource\" class=\"full-width-table\">\n                <ng-container matColumnDef=\"id\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Id</th>\n                    <td mat-cell *matCellDef=\"let i = index\">\n                        {{this.paginator.pageIndex == 0 ? i + 1 : 1 + i + this.paginator.pageIndex * this.paginator.pageSize}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"login\">\n                    <th mat-header-cell *matHeaderCellDef>Login</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.login}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"password\">\n                    <th mat-header-cell *matHeaderCellDef> Password </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.password}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"action\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n                    <td mat-cell *matCellDef=\"let row\">\n                        <button mat-icon-button class=\"btn-delete\"><mat-icon (click)=\"deleted(row._id)\">delete_outline</mat-icon></button>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Schtroumpf';\n}\n","<body>\n    <router-outlet></router-outlet>\n</body>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavbarComponent } from './Component/navbar/navbar.component';\nimport { UserComponent } from './Component/user/user.component';\nimport { RegisterComponent } from './Component/register/register.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginUserComponent } from './Component/login-user/login-user.component';\nimport { UserService } from './shared/user.service';\nimport { AddBoxComponent } from './box/add-box/add-box.component';\n\n\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatDialogModule, MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\n\n\n\n\nimport { AddrowService } from './addrow.service';\nimport { AuthserviceService } from './shared/authservice.service';\nimport { InformationComponent } from './Component/information/information.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    UserComponent,\n    RegisterComponent,\n    LoginUserComponent,\n    AddBoxComponent,\n    InformationComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatInputModule,\n    MatCardModule    \n  ],\n  providers: [\n    {provide: MatDialogRef,\n      useValue: {}},\n    UserService, AddrowService, AuthserviceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AddrowService } from 'src/app/addrow.service';\nimport { Friends } from 'src/app/shared/friends';\nimport { UserService } from 'src/app/shared/user.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-add-box',\n  templateUrl: './add-box.component.html',\n  styleUrls: ['./add-box.component.scss']\n})\nexport class AddBoxComponent {\n  addForm: FormGroup;\n\n  action: string;\n  local_data: any;\n  message: any\n  user: any\n  constructor(private fb: FormBuilder,public dialogRef: MatDialogRef<AddBoxComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: Friends,\n    private dialogService: AddrowService, private friends: UserService,\n    public _router: Router, public _location: Location) {\n      console.log(data);\n    this.local_data = {...data};\n    this.action = this.local_data.action;\n    this.addForm = fb.group({\n      login: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n    }\n    doAction(){\n    this.user = this.addForm.value;\n    this.friends.postFriends(this.user)\n    .subscribe(\n      (res) => {\n        console.warn(\"result\", res);\n      } \n    )\n    this.dialogRef.close({ event: this.action, data: this.local_data });\n    this.dialogService.openSnackBar(this.message, 'body');\n    this._router.navigateByUrl(\"/user\", { skipLocationChange: true }).then(() => {\n      console.log(decodeURI(this._location.path()));\n      this._router.navigate([decodeURI(this._location.path())]);\n    })\n  }\n  closeDialog(){\n    this.dialogRef.close({event:'Cancel'});\n  }\n\n}\n","<h1 style=\"display: flex; justify-content:center;\" mat-dialog-title><strong>{{action}}</strong> Row</h1>\n<div mat-dialog-content>\n    <form [formGroup]=\"addForm\" class=\"box\">\n        <mat-form-field>\n            <input placeholder=\"{{action}} Login\" matInput [(ngModel)]=\"local_data.login\" formControlName=\"login\" maxlength=\"15\">\n        </mat-form-field>\n        <mat-form-field>\n            <input placeholder=\"{{action}} Password\" matInput [(ngModel)]=\"local_data.password\" formControlName=\"password\" minlength=\"10\">\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions class=\"action-box\">\n    <button mat-button type=\"submit\" mat-flat-button color=\"primary\" (click)=\"doAction()\">{{action}}</button>\n    <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthserviceService } from 'src/app/shared/authservice.service';\n\n@Component({\n  selector: 'app-information',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.scss']\n})\nexport class InformationComponent implements OnInit {\n\n  login = '';\n  age = '';\n  family = '';\n  race = '';\n  food = '';\n  constructor(private _authService: AuthserviceService, private _router: Router) {\n    this._authService.getLogin()\n    .subscribe(\n      data => \n          this.age = data.toString(),\n      error => this._router.navigate(['../loginUser'])\n    )\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <div class=\"profil\">\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n                <mat-card-title class=\"profil-header-title\">Profil</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"profil-content\">\n                <div class=\"profil-information login\">\n                    <h1>Login</h1>\n                    <div>\n                        {{login}}\n                    </div>\n                </div>\n                <div class=\"profil-information age\">\n                    <h1>Age</h1>\n                    <div>\n                        {{age}}\n                    </div>\n                </div>\n                <div class=\"profil-information family\">\n                    <h1>Family</h1>\n                    <div>\n                        {{family}}\n                    </div>\n                </div>\n                <div class=\"profil-information race\">\n                    <h1>Race</h1>\n                    <div>\n                        {{race}}\n                    </div>\n                </div>\n                <div class=\"profil-information food\">\n                    <h1>Food</h1>\n                    <div>\n                        {{food}}\n                    </div>\n                </div>\n\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthserviceService } from 'src/app/shared/authservice.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent{\n  myForm: FormGroup;\n  successMessage =  '';\n\n  constructor(private authService: AuthserviceService, private _router: Router, private _activatedRoute: ActivatedRoute) {\n    this.myForm = new FormGroup({\n      login: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n      age: new FormControl(null, Validators.required),\n      family: new FormControl(null, Validators.required),\n      race: new FormControl(null, Validators.required),\n      food: new FormControl(null, Validators.required),\n      cfpassword: new FormControl(null, this.passValid)\n    });\n    this.myForm.controls.password.valueChanges\n    .subscribe (\n      x => this.myForm.controls.cfpassword.updateValueAndValidity()\n    )\n   }\n\n    ngOnInit() {\n  }\n  isValid(controlName: any) {\n    return this.myForm.get(controlName)?.invalid && this.myForm.get(controlName)?.touched;\n  }\n\n  passValid(control: AbstractControl) {\n    if (control && (control.value !== null || control.value !== undefined)) {\n      const cfpassword = control.value;\n\n      const passCtrl = control.root.get('password');\n      if (passCtrl) {\n        const passVal  = passCtrl.value;\n        if (passVal !== cfpassword || passVal === '') {\n          return {\n            isError: true\n          }\n        }\n      }\n    }\n    return null;\n  }\n    movetoLogin() {\n    this._router.navigate(['../loginUser'], {relativeTo: this._activatedRoute});\n  }\n\n  register() {\n    console.log(this.myForm.value);\n    if (this.myForm.valid) {\n      this.authService.submitRegister(this.myForm.value)\n      .subscribe(\n        data => this.successMessage = \"Register Success\",\n        error => this.successMessage = \"Some Error\"\n      )\n      this.movetoLogin();\n    }\n\n  }\n\n}\n\n\n","<div class=\"container\">\n    <img class=\"img-schtroumf-1\" src=\"../../../assets/icon-schtroumpf.svg\" alt=\"\" srcset=\"\">\n    <div class=\"card w-75\">\n        <div class=\"card-body\">\n            <div class=\"card-title\">\n                <h2>REGISTER</h2>\n            </div>\n            <div class=\"form\">\n                <form [formGroup]=\"myForm\">\n                    <div class=\"register\">\n                        <div class=\"left\">\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputEmail1\">Login</label>\n                                <input type=\"email\" class=\"form-control\" formControlName=\"login\" placeholder=\"Enter Login\" required>\n                                <span style=\"color: red;\" *ngIf=\"isValid('login')\">Login is required !</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputEmail1\">Password</label>\n                                <input type=\"password\" class=\"form-control\" id=\"Password\" formControlName=\"password\" placeholder=\"Enter Password\" required>\n                                <span style=\"color: red;\" *ngIf=\"isValid('password')\">Password is required !</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputPassword1\">Confirm Password</label>\n                                <input type=\"password\" class=\"form-control\" id=\"ConfirmPassword\" formControlName=\"cfpassword\" placeholder=\"Confirm Password\" required>\n                                <span style=\"color: red;\" *ngIf=\"isValid('cfpassword')\">Enter the same password!</span>\n                            </div>\n                        </div>\n                        <div class=\"right\">\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputEmail1\">Age</label>\n                                <input class=\"form-control\" formControlName=\"age\" placeholder=\"Enter Age\" required>\n                                <span style=\"color: red;\" *ngIf=\"isValid('age')\">Enter age !</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputEmail1\">Family</label>\n                                <input class=\"form-control\" formControlName=\"family\" placeholder=\"Enter Family\" required>\n                                <span style=\"color: red;\" *ngIf=\"isValid('family')\">Enter family !</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputPassword1\">Race</label>\n                                <input class=\"form-control\" formControlName=\"race\" placeholder=\"Enter Race\" required>\n                                <span style=\"color: red;\" *ngIf=\"isValid('race')\"> Enter race !</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputPassword1\">Food</label>\n                                <input class=\"form-control\" formControlName=\"food\" placeholder=\"Enter Food\" required>\n                                <span style=\"color: red;\" *ngIf=\"isValid('food')\">Enter food !</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style=\"text-align: center; color: blue;\">\n                        {{successMessage}}\n                    </div>\n                    <div class=\"btn-register\">\n                        <button type=\"submit\" (click)=\"register()\" class=\"btn btn-success register\">REGISTER</button>\n                    </div>\n                </form>\n\n                <div class=\"btn-login\">\n                    <div>Already have an account ?</div>\n                    <div class=\"log\">\n                        <button (click)=\"movetoLogin()\" class=\"btn btn-primary login\">Login</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <img class=\"img-schtroumf-2\" src=\"../../../assets/icon-schtroumpf.svg\" alt=\"\" srcset=\"\">\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InformationComponent } from './Component/information/information.component';\nimport { LoginUserComponent } from './Component/login-user/login-user.component';\nimport { RegisterComponent } from './Component/register/register.component';\nimport { UserComponent } from './Component/user/user.component';\nconst routes: Routes = [\n    {path: '', component: RegisterComponent},\n    {path: 'info', component: InformationComponent},\n    {path: 'friends', component: UserComponent},\n    {path: 'register', component: RegisterComponent},\n    {path: 'loginUser', component: LoginUserComponent},\n];\n\n@NgModule({\n  imports: [\n  RouterModule.forRoot(routes),\n],\n  exports: [\n    RouterModule,\n  ]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AddBoxComponent } from './box/add-box/add-box.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddrowService {\n\n  constructor(private dialog: MatDialog, public snackbar: MatSnackBar) { }\n  message: any\n  openSnackBar(message: string, panelClass: string) {\n    this.snackbar.openFromComponent(AddBoxComponent, {\n      data: message,\n      panelClass: 'add',\n      duration: 1500\n    });\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}