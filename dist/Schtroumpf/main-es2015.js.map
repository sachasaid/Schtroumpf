{"version":3,"sources":["./src/environments/environment.ts","./src/app/shared/user.service.ts","./src/app/shared/authservice.service.ts","./src/app/Component/navbar/navbar.component.ts","./src/app/Component/navbar/navbar.component.html","./src/app/Component/login-user/login-user.component.ts","./src/app/Component/login-user/login-user.component.html","./src/app/Component/user/user.component.ts","./src/app/Component/user/user.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/box/add-box/add-box.component.ts","./src/app/box/add-box/add-box.component.html","./src/app/Component/information/information.component.ts","./src/app/Component/information/information.component.html","./src/app/Component/register/register.component.ts","./src/app/Component/register/register.component.html","./src/app/app-routing.module.ts","./src/app/addrow.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\nexport const baseUrl= `mongodb://localhost:27017/Schtroumpf/`;\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  public getFriends() {\n    return this.http.get(\"http://localhost:8080/users\");\n  }\n\n    public postFriends(formData: any) {\n    return this.http.post(\"http://localhost:8080/users\", formData);\n  }\n\n  public delFriends(id: any) {\n    return this.http.delete(\"http://localhost:8080/users\" + '/' + id);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthserviceService {\n\n  constructor(private _http: HttpClient) { }\n\n  submitRegister(body: any) {\n    return this._http.post(\"http://localhost:8080/register\", body, {\n      observe: 'body'\n    });\n  }\n\n   login(body: any) {\n    return this._http.post(\"http://localhost:8080/login\", body, {\n      observe: 'body'\n    });\n  }\n\n  getLogin() {\n    return this._http.get(\"http://localhost:8080/login\", {\n      observe: 'body',\n      params: new HttpParams().append('token', localStorage.getItem('token')!)\n    });\n  }\n\n    getAge() {\n    return this._http.get(\"http://localhost:8080/age\", {\n      observe: 'body',\n      params: new HttpParams().append('token', localStorage.getItem('token')!)\n    });\n  }\n\n    getFamily() {\n    return this._http.get(\"http://localhost:8080/family\", {\n      observe: 'body',\n      params: new HttpParams().append('token', localStorage.getItem('token')!)\n    });\n  }\n\n    getRace() {\n    return this._http.get(\"http://localhost:8080/race\", {\n      observe: 'body',\n      params: new HttpParams().append('token', localStorage.getItem('token')!)\n    });\n  }\n\n    getFood() {\n    return this._http.get(\"http://localhost:8080/food\", {\n      observe: 'body',\n      params: new HttpParams().append('token', localStorage.getItem('token')!)\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private _router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this._router.navigate(['../loginUser']);\n  }\n  movetoFriends(){\n    this._router.navigate(['../friends'])\n  }\n    movetoprofil(){\n    this._router.navigate(['../info'])\n  } \n}\n","<div class=\"navbar\">\n    <div class=\"title-app\">\n        <img src=\"../../../assets/icon-schtroumpf.svg\" alt=\"\">\n        <h1>SCHTROUMF</h1>\n    </div>\n\n    <div class=\"logout\">\n        <button (click)=\"movetoprofil()\" class=\"register-btn\">\n            Profil\n        </button>\n        <button (click)=\"movetoFriends()\" class=\"register-btn\">\n            Friends\n        </button>\n        <button (click)=\"logout()\" class=\"register-btn\">\n            Logout\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthserviceService } from 'src/app/shared/authservice.service';\n\n@Component({\n  selector: 'app-login-user',\n  templateUrl: './login-user.component.html',\n  styleUrls: ['./login-user.component.scss']\n})\nexport class LoginUserComponent implements OnInit {\n\n  loginForm: FormGroup\n\n  constructor(private authService: AuthserviceService, private _router: Router, private _activatedRoute: ActivatedRoute ) {\n    this.loginForm = new FormGroup({\n      login: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n      age: new FormControl(null),\n      family: new FormControl(null),\n      race: new FormControl(null),\n      food: new FormControl(null),\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n    isValid(controlName: any) {\n    return this.loginForm.get(controlName)?.invalid && this.loginForm.get(controlName)?.touched;\n  }\n\n  login() {\n    console.log(this.loginForm.value);\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.value)\n      .subscribe(\n        data => {\n          console.log(data);\n          localStorage.setItem('token', data.toString());\n        },\n        error => {}\n      )\n      this._router.navigate(['../info']);\n    }\n\n  }\n    movetoRegister() {\n    this._router.navigate(['../register'], {relativeTo: this._activatedRoute});\n  }\n\n}\n","<div class=\"login-page\">\n    <div class=\"container\">\n        <img class=\"img-schtroumf-1\" src=\"../../../assets/icon-schtroumpf.svg\" alt=\"\" srcset=\"\">\n        <div class=\"card w-75\">\n            <div class=\"card-body\">\n                <div class=\"card-title\">\n                    <h2>LOGIN</h2>\n                </div>\n                <div class=\"form\">\n                    <form [formGroup]=\"loginForm\">\n                        <div class=\"login\">\n                            <div>\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">Email</label>\n                                    <input type=\"email\" formControlName=\"login\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n                                    <span style=\"color: red;\" *ngIf=\"isValid('login')\">Login is required !</span>\n\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputPassword1\">Password</label>\n                                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n                                    <span style=\"color: red;\" *ngIf=\"isValid('password')\">Login is required !</span>\n                                </div>\n                            </div>\n                            <div>\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputPassword1\">Age</label>\n                                    <input formControlName=\"age\" class=\"form-control\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputPassword1\">Family</label>\n                                    <input formControlName=\"family\" class=\"form-control\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputPassword1\">Race</label>\n                                    <input formControlName=\"race\" class=\"form-control\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputPassword1\">Food</label>\n                                    <input formControlName=\"food\" class=\"form-control\">\n                                </div>\n                                <div class=\"btn-login\">\n                                    <button (click)=login() type=\"submit\" class=\"btn btn-primary\">LOGIN</button>\n                                </div>\n                            </div>\n                        </div>\n\n\n                    </form>\n                </div>\n                <div class=\"btn-register\">\n                    <button type=\"submit\" (click)=\"movetoRegister()\" class=\"btn btn-success register\">REGISTER</button>\n                </div>\n            </div>\n        </div>\n        <img class=\"img-schtroumf-2\" src=\"../../../assets/icon-schtroumpf.svg\" alt=\"\" srcset=\"\">\n    </div>\n</div>","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { AddBoxComponent } from 'src/app/box/add-box/add-box.component';\nimport { Friends } from 'src/app/shared/friends';\nimport { UserService } from 'src/app/shared/user.service';\n\nconst ELEMENT_DATA: Friends[] = [];\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\n\nexport class UserComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'login', 'password', 'action' ];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n  table: any;\n  action: any;\n\n\n  constructor(private friendService: UserService, public dialog: MatDialog) {}\n  @ViewChild(MatPaginator)\n  paginator!: MatPaginator;\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n    ngOnInit(){\n    this.getAllFriends();\n  }\n    openDialog(action: any, obj: any) {\n    obj.action = action;\n    let dialogRef = this.dialog.open(AddBoxComponent, {\n      width: '800px',\n      disableClose: true,\n      data:obj\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result.event == 'Add'){\n        this.addRowData(result.data);\n      }\n    });\n  }\n   openSave(action: any, obj: { action: any; }) {\n    obj.action = action;\n    let dialogRef = this.dialog.open(AddBoxComponent, {\n      width: '800px',\n      disableClose: true,\n      data: obj\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result.data);\n      if (result.event == 'Update') {\n        console.log('update')\n      }\n    });\n  }\n\n    addRowData(row_obj: { _id: any; login: any; password: any; }){\n    this.dataSource.data.push({\n      _id:row_obj._id,\n      login:row_obj.login,\n      password:row_obj.password\n    });\n    return this.dataSource.filter = \"\";\n    \n  }\n\n    deleted(elm: any) {\n    this.friendService.delFriends(elm).subscribe((response: any) => {\n      this.dataSource.data = this.dataSource.data.filter((o: Friends) => {\n        return o._id !== elm ? o : false;\n      });\n      \n      console.log(this.dataSource.data);\n    });\n  }\n  hashPassword(password: string){\n    return \"*\".repeat(password.length)\n  }\n\n  public getAllFriends() {\n    let resp = this.friendService.getFriends();\n    resp.subscribe(report => this.dataSource.data= report as Friends[])\n  }\n}\n\n\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <div class=\"title\">\n        <h5>FRIENDS LIST</h5>\n    </div>\n    <div class=\"list-of-friends\">\n        <div class=\"btn\">\n            <button class=\"btn-add\" (click)=\"openDialog('Add', {})\" mat-button mat-flat-button color=\"primary\"><mat-icon>add</mat-icon>ADD</button>\n        </div>\n\n        <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource\" class=\"full-width-table\">\n                <ng-container matColumnDef=\"id\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Id</th>\n                    <td mat-cell *matCellDef=\"let i = index\">\n                        {{this.paginator.pageIndex == 0 ? i + 1 : 1 + i + this.paginator.pageIndex * this.paginator.pageSize}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"login\">\n                    <th mat-header-cell *matHeaderCellDef>Login</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.login}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"password\">\n                    <th mat-header-cell *matHeaderCellDef> Password </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.password}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"action\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n                    <td mat-cell *matCellDef=\"let row\">\n                        <button mat-icon-button class=\"btn-delete\"><mat-icon (click)=\"deleted(row._id)\">delete_outline</mat-icon></button>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Schtroumpf';\n}\n","<body>\n    <router-outlet></router-outlet>\n</body>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavbarComponent } from './Component/navbar/navbar.component';\nimport { UserComponent } from './Component/user/user.component';\nimport { RegisterComponent } from './Component/register/register.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginUserComponent } from './Component/login-user/login-user.component';\nimport { UserService } from './shared/user.service';\nimport { AddBoxComponent } from './box/add-box/add-box.component';\n\n\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatDialogModule, MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\n\n\n\n\nimport { AddrowService } from './addrow.service';\nimport { AuthserviceService } from './shared/authservice.service';\nimport { InformationComponent } from './Component/information/information.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    UserComponent,\n    RegisterComponent,\n    LoginUserComponent,\n    AddBoxComponent,\n    InformationComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatInputModule,\n    MatCardModule    \n  ],\n  providers: [\n    {provide: MatDialogRef,\n      useValue: {}},\n    UserService, AddrowService, AuthserviceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AddrowService } from 'src/app/addrow.service';\nimport { Friends } from 'src/app/shared/friends';\nimport { UserService } from 'src/app/shared/user.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-add-box',\n  templateUrl: './add-box.component.html',\n  styleUrls: ['./add-box.component.scss']\n})\nexport class AddBoxComponent {\n  addForm: FormGroup;\n\n  action: string;\n  local_data: any;\n  message: any\n  user: any\n  constructor(private fb: FormBuilder,public dialogRef: MatDialogRef<AddBoxComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: Friends,\n    private dialogService: AddrowService, private friends: UserService,\n    public _router: Router, public _location: Location) {\n      console.log(data);\n    this.local_data = {...data};\n    this.action = this.local_data.action;\n    this.addForm = fb.group({\n      login: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n    }\n    doAction(){\n    this.user = this.addForm.value;\n    this.friends.postFriends(this.user)\n    .subscribe(\n      (res) => {\n        console.warn(\"result\", res);\n      } \n    )\n    this.dialogRef.close({ event: this.action, data: this.local_data });\n    this.dialogService.openSnackBar(this.message, 'body');\n    this._router.navigateByUrl(\"/user\", { skipLocationChange: true }).then(() => {\n      console.log(decodeURI(this._location.path()));\n      this._router.navigate([decodeURI(this._location.path())]);\n    })\n  }\n  closeDialog(){\n    this.dialogRef.close({event:'Cancel'});\n  }\n\n}\n","<h1 style=\"display: flex; justify-content:center;\" mat-dialog-title><strong>{{action}}</strong> Row</h1>\n<div mat-dialog-content>\n    <form [formGroup]=\"addForm\" class=\"box\">\n        <mat-form-field>\n            <input placeholder=\"{{action}} Login\" matInput [(ngModel)]=\"local_data.login\" formControlName=\"login\" maxlength=\"15\">\n        </mat-form-field>\n        <mat-form-field>\n            <input placeholder=\"{{action}} Password\" matInput [(ngModel)]=\"local_data.password\" formControlName=\"password\" minlength=\"10\">\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions class=\"action-box\">\n    <button mat-button type=\"submit\" mat-flat-button color=\"primary\" (click)=\"doAction()\">{{action}}</button>\n    <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthserviceService } from 'src/app/shared/authservice.service';\n\n@Component({\n  selector: 'app-information',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.scss']\n})\nexport class InformationComponent implements OnInit {\n\n  login = '';\n  age = '';\n  family = '';\n  race = '';\n  food = '';\n  constructor(private _authService: AuthserviceService, private _router: Router) {\n\n   }\n\n  ngOnInit(): void {\n        this._authService.getLogin()\n    .subscribe(\n      data => this.login = data.toString(),\n      error => this._router.navigate(['../loginUser'])\n    )\n    this._authService.getAge()\n    .subscribe(\n      data => this.age = data.toString(),\n      error => this._router.navigate(['../loginUser'])\n\n    )\n    this._authService.getFamily()\n    .subscribe(\n      data => this.family = data.toString(),\n      error => this._router.navigate(['../loginUser'])\n\n    )\n    this._authService.getFood()\n    .subscribe(\n      data => this.food = data.toString(),\n      error => this._router.navigate(['../loginUser'])\n\n    )\n      this._authService.getRace()\n    .subscribe(\n      data => this.race = data.toString(),\n      error => this._router.navigate(['../loginUser'])\n\n    )\n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <div class=\"profil\">\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n                <mat-card-title class=\"profil-header-title\">Profil</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"profil-content\">\n                <div class=\"profil-information login\">\n                    <h1>Login</h1>\n                    ------>\n                    <div class=\"info\">\n                        {{login}}\n                    </div>\n                </div>\n                <div class=\"profil-information age\">\n                    <h1>Age</h1>\n                    ------>\n                    <div class=\"info\">\n                        {{age}}\n                    </div>\n                </div>\n                <div class=\"profil-information family\">\n                    <h1>Family</h1>\n                    ------>\n                    <div class=\"info\">\n                        {{family}}\n                    </div>\n                </div>\n                <div class=\"profil-information race\">\n                    <h1>Race</h1>\n                    ------>\n                    <div class=\"info\">\n                        {{race}}\n                    </div>\n                </div>\n                <div class=\"profil-information food\">\n                    <h1>Food</h1>\n                    ------>\n                    <div class=\"info\">\n                        {{food}}\n                    </div>\n                </div>\n\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthserviceService } from 'src/app/shared/authservice.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent{\n  myForm: FormGroup;\n  successMessage =  '';\n\n  constructor(private authService: AuthserviceService, private _router: Router, private _activatedRoute: ActivatedRoute) {\n    this.myForm = new FormGroup({\n      login: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n      cfpassword: new FormControl(null, this.passValid)\n    });\n    this.myForm.controls.password.valueChanges\n    .subscribe (\n      x => this.myForm.controls.cfpassword.updateValueAndValidity()\n    )\n   }\n\n    ngOnInit() {\n  }\n  isValid(controlName: any) {\n    return this.myForm.get(controlName)?.invalid && this.myForm.get(controlName)?.touched;\n  }\n\n  passValid(control: AbstractControl) {\n    if (control && (control.value !== null || control.value !== undefined)) {\n      const cfpassword = control.value;\n\n      const passCtrl = control.root.get('password');\n      if (passCtrl) {\n        const passVal  = passCtrl.value;\n        if (passVal !== cfpassword || passVal === '') {\n          return {\n            isError: true\n          }\n        }\n      }\n    }\n    return null;\n  }\n    movetoLogin() {\n    this._router.navigate(['../loginUser'], {relativeTo: this._activatedRoute});\n  }\n\n  register() {\n    console.log(this.myForm.value);\n    window.location.reload()\n    if (this.myForm.valid) {\n      this.authService.submitRegister(this.myForm.value)\n      .subscribe(\n        data => this.successMessage = \"Register Success\",\n        error => this.successMessage = \"Some Error\"\n      )\n      this.movetoLogin();\n    }\n\n  }\n\n}\n\n\n","<div class=\"register-container\">\n    <div class=\"container\">\n        <img class=\"img-schtroumf-1\" src=\"../../../assets/icon-schtroumpf.svg\" alt=\"\" srcset=\"\">\n        <div class=\"card w-75\">\n            <div class=\"card-body\">\n                <div class=\"card-title\">\n                    <h2>REGISTER</h2>\n                </div>\n                <div class=\"form\">\n                    <form [formGroup]=\"myForm\">\n                        <div class=\"register\">\n                            <div class=\"left\">\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">Login</label>\n                                    <input type=\"email\" class=\"form-control\" formControlName=\"login\" placeholder=\"Enter Login\" required>\n                                    <span style=\"color: red;\" *ngIf=\"isValid('login')\">Login is required !</span>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">Password</label>\n                                    <input type=\"password\" class=\"form-control\" id=\"Password\" formControlName=\"password\" placeholder=\"Enter Password\" required>\n                                    <span style=\"color: red;\" *ngIf=\"isValid('password')\">Password is required !</span>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputPassword1\">Confirm Password</label>\n                                    <input type=\"password\" class=\"form-control\" id=\"ConfirmPassword\" formControlName=\"cfpassword\" placeholder=\"Confirm Password\" required>\n                                    <span style=\"color: red;\" *ngIf=\"isValid('cfpassword')\">Enter the same password!</span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div style=\"text-align: center; color: blue;\">\n                            {{successMessage}}\n                        </div>\n                        <div class=\"btn-register\">\n                            <button type=\"submit\" (click)=\"register()\" class=\"btn btn-success register\">REGISTER</button>\n                        </div>\n                    </form>\n\n                    <div class=\"btn-login\">\n                        <div>Already have an account ?</div>\n                        <div class=\"log\">\n                            <button (click)=\"movetoLogin()\" class=\"btn btn-primary login\">Login</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <img class=\"img-schtroumf-2\" src=\"../../../assets/icon-schtroumpf.svg\" alt=\"\" srcset=\"\">\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InformationComponent } from './Component/information/information.component';\nimport { LoginUserComponent } from './Component/login-user/login-user.component';\nimport { RegisterComponent } from './Component/register/register.component';\nimport { UserComponent } from './Component/user/user.component';\nconst routes: Routes = [\n    {path: '', component: RegisterComponent},\n    {path: 'info', component: InformationComponent},\n    {path: 'friends', component: UserComponent},\n    {path: 'register', component: RegisterComponent},\n    {path: 'loginUser', component: LoginUserComponent},\n];\n\n@NgModule({\n  imports: [\n  RouterModule.forRoot(routes),\n],\n  exports: [\n    RouterModule,\n  ]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AddBoxComponent } from './box/add-box/add-box.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddrowService {\n\n  constructor(private dialog: MatDialog, public snackbar: MatSnackBar) { }\n  message: any\n  openSnackBar(message: string, panelClass: string) {\n    this.snackbar.openFromComponent(AddBoxComponent, {\n      data: message,\n      panelClass: 'add',\n      duration: 1500\n    });\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}